install.packages("rmarkdown")
install.packages("dplyr")
install.packages("ggplot2")
6/3
6/4
set.seed(123)
ranks <- as.factor(sample(10,40,replace = T ))
ranks
set.seed(234)
heights <- rnorm(40, 171, 5)
heights
ft <- table(ranks)
ft
class(ft)
type(ft)
quantile(heights)
quantile(heights, probs = c(0,0.25,.5,.75,1))
clear
cls
clc
install.packages("xlsx")
library(xlsx)
setwd("~/Documents/UdacityDataAnalyst/P1 Lessons")
data <- read.xlsx("Wage Data.xlsx",1)
data
data <- read.xlsx("Wage Data.xlsx", sheetIndex = 1, colIndex = c(1,2))
data
plot(x = data$Hours, y = data$Hourly.Rate, pch = 19)
plot(x = data$Hours, y = data$Hourly.Rate, pch = 19)
count <- c(108,286,71,127)
total <- sum(count)
porportion <- count/total
porportion
percentage <- count/total * 100
percentage
eruptionData <- read.xlsx("Faithful Geyser Eruptions.xlsx", sheetIndex = 1, colIndex = 1)
eruptionData
is.na(eruptionData)
!is.na(eruptionData)
eruptionData <- eruptiondata[!is.na(eruptionData)]
eruptionData <- eruptionData[!is.na(eruptionData)]
eruptionData
summary(eruptionData)
seq(1.6,5.2,0.2)
seq(1.5999,5.2,0.2)
mean(eruptionData)
median(eruptionData)
intervals <- seq(1.6,5.2,0.2)
eruptionData.cut <- cut(eruptionData,breaks = intervals,right = F)
eruptionData.cut
table(eruptionData.cut)
which.max(table(eruptionData.cut))
hist(eruptionData, breaks = intervals)
hist(eruptionData, breaks = intervals, border = F, col = 'black')
sum((eruptionData-mean(eruptionData))^2)/length(eruptionData)
var(eruptionData)
sqrt(sum((eruptionData-mean(eruptionData))^2)/length(eruptionData))
sd(eruptionData)
qnorm(2,0,1)
pnorm(2,0,1)
1-pnorm(2,0,1)
2*(1-pnorm(2,0,1))
1-2*(1-pnorm(2,0,1))
1-2*(1-pnorm(1,0,1))
sum((eruptionData-mean(eruptionData))^2)/(length(eruptionData)-1)
var(eruptionData)
sqrt(sum((eruptionData-mean(eruptionData))^2)/(length(eruptionData)-1))
eruptionData <- read.xlsx("Faithful Geyser Eruptions.xlsx", sheetIndex = 1, colIndex = c(1,2))
eruptionData
eruptionData <- read.xlsx("Faithful Geyser Eruptions with Sample.xlsx", sheetIndex = 1, colIndex = c(1,2))
eruptionData
eruptionData <- read.xlsx("Faithful Geyser Eruptions with Sample.xlsx", sheetIndex = 1, colIndex = c(1,2))
population <- eruptionData[1:272,1]
sample <- eruptionData[1:10,2]
sum((eruptionData-mean(eruptionData))^2)/length(eruptionData)
var(sample)
sqrt(sum((eruptionData-mean(eruptionData))^2)/length(eruptionData))
sd(sample)
1-2*(1-pnorm(2,0,1))
1-2*(1-pnorm(1,0,1))
eruptionData <- read.xlsx("Faithful Geyser Eruptions with Sample.xlsx", sheetIndex = 1, colIndex = c(1,2))
population <- eruptionData[1:272,1]
sample <- eruptionData[1:10,2]
population
sample
sum((population-mean(population))^2)/length(population)
var(sample)
sqrt(sum((population-mean(population))^2)/length(population))
sd(sample)
1-2*(1-pnorm(2,0,1))
1-2*(1-pnorm(1,0,1))
# L4: Variance and Standard Deviation
```{r}
eruptionData <- read.xlsx("Faithful Geyser Eruptions with Sample.xlsx", sheetIndex = 1, colIndex = c(1,2))
population <- eruptionData[1:272,1]
sample <- eruptionData[1:10,2]
sum((population-mean(population))^2)/length(population)
var(sample)
sqrt(sum((population-mean(population))^2)/length(population))
sd(sample)
round(1-2*(1-pnorm(2,0,1)),2)
round(1-2*(1-pnorm(1,0,1)),2)
mu_male = 70
sd_male = 4
mu_female = 65
sd_female = 3.5
Pam.height = 68
Jesse.height = 72
mu_male = 70
sd_male = 4
mu_female = 65
sd_female = 3.5
Pam.height = 68
Jesse.height = 72
Pam.height.z = (Pam.height-mu_female)/sd_female
Pam.height.z = (Pam.height-mu_female)/sd_female
Pam.height.z
Jesse.height.z = (Jesse.height-mu_male)/sd_male
Jesse.height.z
qnorm(0.8571429, 0 ,1)
qnorm(0.5, 0, 1)
pnorm(Pam.height.z, 0 ,1)
pnorm(Jesse.height.z, 0, 1)
pnorm(Pam.height.z, 0 ,1, lower.tail = F)
pnorm(Jesse.height.z, 0, 1, lower.tail = F)
mu_SAT <- 1497
sd_SAT <- 322
se <- sd_SAT/sqrt(25)
se
(1609-1497)/se
pnorm((1609-1497)/se, 1497, se)
pnorm((1609-1497)/se, 1497, se, lower.tail = F)
pnorm(1609, 1497, se, lower.tail = F)
qt(p = 0.025,df = 24,lower.tail = T)
qt(p = 0.025,df = 24,lower.tail = F)
1609 + qt(p = 0.025,df = 24,lower.tail = F)*se*c(-1,1)
qt(p = 0.05,df = 24,lower.tail = F)
qnorm(p = 0.05,df = 24,lower.tail = F)
qnorm(p = 0.05)
qnorm(p = 0.025,lower.tail = F)
1609 + qnorm(p = 0.025,lower.tail = F)*se*c(-1,1)
friendCount = c(356,536,1032,209,285)
mean_x = mean(friendCount)
sd_x = sd(friendCount)
mu = 338
friendCount = c(356,536,1032,209,285)
mean_x = mean(friendCount)
sd_x = sd(friendCount)
t = (mean_x - mu)/sd_x
t
mu = 338
friendCount = c(356,536,1032,209,285)
mean_x = mean(friendCount)
sd_x = sd(friendCount)
t = (mean_x - mu)/(sd_x/sqrt(length(friendCount)))
t
qt(t, df = length(friendCount)-1,lower.tail = T)
pt(t, df = length(friendCount)-1,lower.tail = T)
pt(t, df = length(friendCount)-1,lower.tail = F)
2 * pt(t, df = length(friendCount)-1,lower.tail = F)
qt(0.025, df = length(friendCount)-)
qt(0.025, df = length(friendCount)-1)
qt(0.025, df = length(friendCount)-1)*sd_x*c(1,-1)
mean_x + qt(0.025, df = length(friendCount)-1)*sd_x*c(1,-1)
mu = 338
friendCount = c(356,536,1032,209,285)
mean_x = mean(friendCount)
sd_x = sd(friendCount)
se = sd_x/sqrt(length(friendCount))
t = (mean_x - mu)/(se)
t
p = 2 * pt(t, df = length(friendCount)-1,lower.tail = F)
mean_x + qt(0.025, df = length(friendCount)-1)*se*c(1,-1)
stock <- read.xlsx("Stock Prices.xlsx", sheetIndex = 1, colIndex = c(1,2))
stock
stock <- read.xlsx("Stock Prices.xlsx", sheetIndex = 1, rowIndex = 1:10,colIndex = c(1,2))
stock
stock <- read.xlsx("Stock Prices.xlsx", sheetIndex = 1, rowIndex = 1:11,colIndex = c(1,2))
stock
stock <- read.xlsx("Stock Prices.xlsx", sheetIndex = 1, rowIndex = 1:11,colIndex = 1:3)
stock
apply(stock[,2:3], mean)
apply(stock[,2:3],MARGIN = 1, mean)
apply(stock[,2:3],MARGIN = 2, mean)
mean(stock[,2])
stock[,2]-stock[,3]
d = stock[,2]-stock[,3]
d
mean(d)
mu_d
mu[1]-mu[2]
mu = apply(stock[,2:3],MARGIN = 2, mean)
mu_d = mu[1]-mu[2]
mu_d
d = stock[,2]-stock[,3]
mu_d = mean(d)
se = sd(d)/sqrt(nrow(stock))
t = (d - 0)/se
t
d = stock[,2]-stock[,3]
mu_d = mean(d)
se = sd(d)/sqrt(nrow(stock))
t = (mu_d - 0)/se
t
p = 2 * pt(t, df = 9, lower.tail = F)
p
pt(t, df = 9, lower.tail = F)
pt(t, df = 9, lower.tail = T)
t
2 * pt(t, df = 9, lower.tail = T)
qt(0.1/2, df = 9, lower.tail =T)
mu_d + qt(0.1/2, df = 9, lower.tail =T) * se * c(1,-1)
dose1 <- read.xlsx("Guinea pig tooth lengths.xlsx", sheetIndex = 1, colIndex = c(1,2))
dose <- read.xlsx("Guinea pig tooth lengths.xlsx", sheetIndex = 1, colIndex = c(1,2))
deos
dose
dose[1:20,1]
dose1 <- dose[1:20,1]
dose2 <- dose[1:17,2]
df <- length(dose1) + length(dose2) -2
df
t = qt(p = 0.025, df = df, lower.tail = T)
t
sp_squared = ((n1 - 1)*var(doese1) + (n2 - 1)*var(dose2))/df
c(1,2))
n1 = 20
n2 = 17
sp_squared = ((n1 - 1)*var(doese1) + (n2 - 1)*var(dose2))/df
n1 = 20
n2 = 17
dose1 <- dose[1:n1,1]
dose2 <- dose[1:n2,2]
df <- n1 + n2 - 2
df
d = mean(dose1) - mean(dose2)
sp_squared = ((n1 - 1)*var(doese1) + (n2 - 1)*var(dose2))/df
sp_squared = ((n1 - 1)*var(does1) + (n2 - 1)*var(dose2))/df
sp_squared = ((n1 - 1)*var(dose1) + (n2 - 1)*var(dose2))/df
sp_squared = ((n1 - 1)*var(dose1) + (n2 - 1)*var(dose2))/df
se = sqrt(sp_squared * (1/n1 + 1/n2))
t = (d - 0)/se
t
p = 2 * pt(t, df = df, lower.tail = T)
p
pt(t, df = df, lower.tail = T)
p
qt(0.01/2, df = df, lower.tail =T) * c(1,-1)
d + qt(0.01/2, df = df, lower.tail =T) * se * c(1,-1)
d
